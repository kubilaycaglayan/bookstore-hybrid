{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/kubilay/Documents/Microverse Projects/5-react/bookstore-hybrid/bookstore/app/javascript/packs/components/CategoryFilter.js\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeCategory } from '../actions/index';\n\nvar mapStatesToProps = function mapStatesToProps(state) {\n  return {\n    books: state.books,\n    category: state.category\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changeFilter: function changeFilter(category) {\n      return dispatch(changeCategory(category));\n    }\n  };\n};\n\nvar Filter = function Filter(props) {\n  var books = props.books,\n      changeFilter = props.changeFilter;\n  var categories = books.map(function (book) {\n    return book.category;\n  });\n  categories = ['All'].concat(_toConsumableArray(new Set(categories)));\n\n  var handleChange = function handleChange(e) {\n    changeFilter(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, categories.map(function (category) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: Math.random(),\n      value: category,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, category);\n  }));\n};\n\nFilter.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.object).isRequired,\n  changeFilter: PropTypes.func.isRequired\n};\nexport default connect(mapStatesToProps, mapDispatchToProps)(Filter);","map":{"version":3,"sources":["/home/kubilay/Documents/Microverse Projects/5-react/bookstore-hybrid/bookstore/app/javascript/packs/components/CategoryFilter.js"],"names":["React","connect","PropTypes","changeCategory","mapStatesToProps","state","books","category","mapDispatchToProps","dispatch","changeFilter","Filter","props","categories","map","book","Set","handleChange","e","target","value","Math","random","propTypes","arrayOf","object","isRequired","func"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK;AAAA,SAAK;AACjCC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADoB;AAEjCC,IAAAA,QAAQ,EAAEF,KAAK,CAACE;AAFiB,GAAL;AAAA,CAA9B;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCC,IAAAA,YAAY,EAAE,sBAAAH,QAAQ;AAAA,aAAIE,QAAQ,CAACN,cAAc,CAACI,QAAD,CAAf,CAAZ;AAAA;AADgB,GAAL;AAAA,CAAnC;;AAIA,IAAMI,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAAA,MACdN,KADc,GACUM,KADV,CACdN,KADc;AAAA,MACPI,YADO,GACUE,KADV,CACPF,YADO;AAEtB,MAAIG,UAAU,GAAGP,KAAK,CAACQ,GAAN,CAAU,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACR,QAAT;AAAA,GAAd,CAAjB;AACAM,EAAAA,UAAU,IAAI,KAAJ,4BAAc,IAAIG,GAAJ,CAAQH,UAAR,CAAd,EAAV;;AAEA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACxBR,IAAAA,YAAY,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAQ,IAAA,QAAQ,EAAEH,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIJ,UAAU,CAACC,GAAX,CAAe,UAAAP,QAAQ,EAAI;AACzB,wBACE;AAAQ,MAAA,GAAG,EAAEc,IAAI,CAACC,MAAL,EAAb;AAA4B,MAAA,KAAK,EAAEf,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8CA,QAA9C,CADF;AAGD,GAJD,CAFJ,CADF;AAWD,CApBD;;AAsBAI,MAAM,CAACY,SAAP,GAAmB;AACjBjB,EAAAA,KAAK,EAAEJ,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACuB,MAA5B,EAAoCC,UAD1B;AAEjBhB,EAAAA,YAAY,EAAER,SAAS,CAACyB,IAAV,CAAeD;AAFZ,CAAnB;AAKA,eAAezB,OAAO,CACpBG,gBADoB,EAEpBI,kBAFoB,CAAP,CAGbG,MAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeCategory } from '../actions/index';\n\nconst mapStatesToProps = state => ({\n  books: state.books,\n  category: state.category,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: category => dispatch(changeCategory(category)),\n});\n\nconst Filter = props => {\n  const { books, changeFilter } = props;\n  let categories = books.map(book => book.category);\n  categories = ['All', ...new Set(categories)];\n\n  const handleChange = e => {\n    changeFilter(e.target.value);\n  }\n\n  return (\n    <select onChange={handleChange}>\n      {\n        categories.map(category => {\n          return (\n            <option key={Math.random()} value={category}>{category}</option>\n          );\n        })\n      }\n    </select>\n  );\n};\n\nFilter.propTypes = {\n  books: PropTypes.arrayOf(PropTypes.object).isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  mapStatesToProps,\n  mapDispatchToProps,\n)(Filter);\n"]},"metadata":{},"sourceType":"module"}